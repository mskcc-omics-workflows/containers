name: Test builds
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: mskcc.jfrog.io/omicswf-docker-dev-local/mskcc-omics-workflows

jobs:
  dockerfile-changes:
    name: dockerfile-changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'docker-images' output variable
      docker-images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: debug
        run: git log --pretty=format:'%h' -n 2
      - name: Create tags.yml to grab changes
        id: get_tags
        run: |
          for i in $(find containers -name "Dockerfile")
          do
          path=$(dirname $i)
          tag=$(echo $path | cut -f 2- -d/)
          echo -e "$tag:\n  $path/**"
          done > .github/tags.yml
      - name: debug
        run: cat .github/tags.yml
      - uses: mirpedrol/paths-filter@main
        id: filter
        with:
          filters: ".github/tags.yml"
          token: ""
  dockerfile-build:
    runs-on: ubuntu-latest
    name: dockerfile-build
    needs: [dockerfile-changes]
    if: needs.dockerfile-changes.outputs.docker-images != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.dockerfile-changes.outputs.docker-images) }}"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: mskcc.jfrog.io
          username: ${{ secrets.MSK_JFROG_USERNAME }}
          password: ${{ secrets.MSK_JFROG_TOKEN }}
      - name: Get docker repo name
        id: docker_repo_name
        run: echo name=$( dirname "${{ matrix.tags }}" ) >> $GITHUB_OUTPUT
      - name: Get docker version
        id: docker_repo_version
        run: echo version=$( basename "${{ matrix.tags }}" ) >> $GITHUB_OUTPUT
      - name: Build Docker
        uses: docker/build-push-action@v5
        with:
          context: containers/${{ matrix.tags }}/
          file: containers/${{ matrix.tags }}/Dockerfile
          load: true
          tags: ${{ env.REGISTRY }}/${{ steps.docker_repo_name.outputs.name}}:${{steps.docker_repo_version.outputs.version}}
      - name: Test image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ steps.docker_repo_name.outputs.name}}:${{steps.docker_repo_version.outputs.version}}
      - name: Export to Docker
        uses: docker/build-push-action@v5
        with:
          context: containers/${{ matrix.tags }}/
          file: containers/${{ matrix.tags }}/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ steps.docker_repo_name.outputs.name}}:${{steps.docker_repo_version.outputs.version}}
          push: true